<div>
    <div id="userTableSection">
        <div style="float: right; margin-top: 20px; margin-bottom: 20px;">
            <button type="button" class="btn btn-success" onclick="onAddClick()">Add</button>
            <button id="btnEdit" type="button" class="btn btn-secondary" onclick="onEditClick()">Edit</button>
            <button type="button" class="btn btn-danger" onclick="onDeleteClick()">Delete</button>
        </div>
        <table id="userTable" class="table table-bordered">
            <thead>
                <tr>
                    <th><input type="checkbox" onchange="onCheckboxChange(this)" id="selectAllCheckbox" value="ALL" /></th>
                    <th>User Id</th>
                    <th>User Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <div id="addEditForm" style="display: none;">
        <table>
            <tr>
                <td>User Id</td>
                <td id="tdUserId"></td>
            </tr>
            <tr>
                <td>User Name</td>
                <td><input type="text" id="inputUserName" /></td>
            </tr>
            <tr>
                <td>Description</td>
                <td><textarea id="textAreaDescription" rows="4" cols="50"></textarea></td>
            </tr>
            <tr>
                <td>
                    <button type="button" class="btn btn-success" onclick="onSaveClick()">Save</button>
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="onCancelClick()">Cancel</button>
                </td>
            </tr>
        </table>
    </div>
</div>
<script type="text/javascript">
    let rows = [];
    let selectedRows = [];
    let user;
    var endpoint = 'https://jsonplaceholder.typicode.com'
    $(document).ready(function () {
        loadData();


    });
    function onDeleteClick() {
        selectedRows.forEach(ele => {
            let userId = ele.split("_")[0];
            let rowId = ele.split("_")[1];
            deleteData(userId, rowId);
        });
    }
    function loadData() {
        $.ajax({
            url: endpoint + "/posts",
            contentType: "application/json",
            dataType: 'json',
            success: function (result) {
                $("#userTable tbody tr").remove();
                bindData(result);


            }
        });
    }
    function onAddClick() {
        $("#userTableSection").hide();
        $("#addEditForm").show();

    }
    function onEditClick() {
        if (selectedRows.length == 1) {
            userId = selectedRows[0].split("_")[0];
            id = selectedRows[0].split("_")[1];
            let index = rows.findIndex(a => a.id == id);
            if (index > -1) {
                $("#userTableSection").hide();
                $("#addEditForm").show();
                $("#tdUserId").html(rows[index].id);
                $("#inputUserName").val(rows[index].title),
                $("#textAreaDescription").val(rows[index].body);
            }
            selectedRows = [];
        }
    }
    function onSaveClick() {
        let isAdd = false;
        let url = '';
        let postType = 'POST';
        if ($("#tdUserId").html().length == 0) {
            user ={
                title: $("#inputUserName").val(),
                body: $("#textAreaDescription").val(),
                userId: 1
            };
            isAdd = true;
            url = endpoint + "/posts";
        } else {
            user = {
                id: parseInt(id.toString()),
                title: $("#inputUserName").val(),
                body: $("#textAreaDescription").val(),
                userId: parseInt(userId.toString())
            };
            isAdd = false;
            url = endpoint + "/posts/1";
            postType = "PUT";
        }
        $.ajax({
            url: url,
            type: postType,
            contentType: "application/json; charset=UTF-8",
            dataType: 'json',
            data: JSON.stringify(user),
            success: function (result) {
                onCancelClick();
                if (isAdd)
                    bindData([result]);
                else
                    updateData(user);
            }
        });
    }
    function onCancelClick() {
        $("#userTableSection").show();
        $("input[type='checkbox']").prop('checked', false);
        $("#addEditForm").hide();
        $("#btnEdit").prop('disable', true);
        $("#btnEdit").removeClass('btn btn-info');
        $("#btnEdit").addClass('btn btn-secondary');
        resetForm();
    }
    function deleteData(userId, rowId) {
        $.ajax({
            url: endpoint + "/posts/" + rowId,
            type: 'DELETE',
            contentType: "application/json",
            dataType: 'json',
            success: function (result) {
                $("#tr_" + rowId).remove();
                selectedRows = [];
                $("#btnEdit").prop('disable', true);
                $("#btnEdit").removeClass('btn btn-info');
                $("#btnEdit").addClass('btn btn-secondary');

            }
        });
    }
    function onCheckboxChange(ctrl) {
        let isChecked = $(ctrl).is(":checked");
        let id = $(ctrl)[0].id;
        let value = $(ctrl)[0].value;

        if (value == "ALL") {
            $("input[type='checkbox']").prop('checked', isChecked);
            if (isChecked) {
                rows.forEach(a => {
                    selectedRows.push(a.userId + "_" + a.id);
                });
            } else {
                selectedRows = [];
            }
        } else {
            if (isChecked) {
                selectedRows.push(value);
            }
            else {
                let i = selectedRows.findIndex(a => a == value);
                if (i > -1) {
                    selectedRows.splice(i, 1);
                }
            }
            if (selectedRows.length == 1) {
                $("#btnEdit").prop('disable', false);
                $("#btnEdit").removeClass('btn btn-secondary');
                $("#btnEdit").addClass('btn btn-info');
            }
            else {
                $("#btnEdit").prop('disable', true);
                $("#btnEdit").removeClass('btn btn-info');
                $("#btnEdit").addClass('btn btn-secondary');
            }
        }

    }
    function bindData(json) {
        var tr;
        for (var i = 0; i < json.length; i++) {
            let user = json[i];
            tr = $("<tr id='tr_" + user.id + "' />");
            tr.append("<td><input type='checkbox' onchange='onCheckboxChange(this)' id='" + user.id + "' value='" + user.userId + "_" + user.id + "'/></td>");
            tr.append("<td>" + user.id + "</td>");
            tr.append("<td id='tdUserTitle_" + user.id + "'>" + user.title + "</td>");
            tr.append("<td id='tdUserBody_" + user.id + "'>" + user.body + "</td>");
            $('#userTable').append(tr);
            rows.push(user);
        }
    }
    function updateData(user) {
        let i = rows.findIndex(a => a.id == user.id);
        if (i > -1) {
            rows[i].title = user.title;
            rows[i].body = user.body;
            $("#tdUserTitle_" + user.id).html(user.title);
            $("#tdUserBody_" + user.id).html(user.body);
        }
    }
    function resetForm(){
        $("#tdUserId").html('');
        $("#inputUserName").val(''),
        $("#textAreaDescription").val('');
    }
</script>